# grade-whip

Whip yourself into grading student papers efficiently by scheduling delivery
of graded PDFs at a future time.

## Installation

If you have a student named Immanuel Kant whose email is ikant@konigsberg.edu,
then create a file here called `students.csv` and write this:

    Kant,Immanuel,ikant,

Repeat for each student, one line per student. Note that there are no spaces
after the commas, and there is a final comma at the end of the line.

Edit the variables at the beginning of `send.sh`. Edit the text of the email.
Edit the `warn` and `sleep` commands to determine when the emails will go and
when you will be warned. For example, to send the grades in 24 hours, with
several warnings, use these commands:

    warn 1440; sleep 1200m # Warn that emails will go in 24 hours
    warn 240; sleep 180m   # Warn that emails will go in 4 hours
    warn 60; sleep 50m     # Warn that emails will go in 1 hour
    warn 10; sleep 9m      # Warn that emails will go in 10 minutes
    warn 1; sleep 1m       # Warn that emails will go in 1 minute.

Before you run the script, test by removing the `#` at the start of the line
`#to="$MY_REPLY_TO"` in `send.sh`. Then you will receive all the emails instead
of your students.

When are you are ready to start the timer, run `send.sh` on your remote
computer.

## Running `send.sh` in the background

To run the command in the background, use `screen`. `screen -a` will
create a new background terminal. In that terminal, run `./send.sh`. Then type
`CTRL-a-d` to hide the screen. To bring it back run `screen -ls` to show which
background terminals are active. Copy the name of the screen which will look
something vaguely like this: `23953.pts-0.web35`. Then run `screen -rd
23953.pts-0.web35`, or whatever the name was.
